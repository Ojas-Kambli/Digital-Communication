# -*- coding: utf-8 -*-
"""DC_Exp1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BVRXHQCzSbLx4eiIl4n8FCfJWsuOKUOS
"""

import numpy as np
Pxy=np.array([[1/8,1/16,1/32,1/32],[1/16,1/8,1/32,1/32],[1/16,1/16,1/16,1/16],[1/4,0,0,0]])
Pxy

joint=Pxy.flatten()
Hxy=-np.sum(p*np.log2(p) for p in joint if p>0)
Hxy

Px=np.sum(Pxy,axis=1)
Px

Py=np.sum(Pxy,axis=0)
Py

Hx=-np.sum(p*np.log2(p) for p in Px if p>0)
Hy=-np.sum(p*np.log2(p) for p in Py if p>0)
print("The entropy Hx = ",Hx)
print("The entropy Hy = ",Hy)

Px_given_y=Pxy/Py
print("Px_given_y =\n",Px_given_y)
mask=Px_given_y>0
Hx_given_y=-np.sum(Pxy[mask]*np.log2(Px_given_y[mask]))
print("Hx_given_y =\n",Hx_given_y)

Py_given_x=Pxy/Px
print("Py_given_x =\n",Py_given_x)
mask=Py_given_x>0
Hy_given_x=-np.sum(Pxy[mask]*np.log2(Py_given_x[mask]))
print("Hy_given_x =\n",Hy_given_x)

Ixy1=Hx+Hy-Hxy
print(Ixy1)
Ixy2=Hx-Hx_given_y
print(Ixy2)
Ixy3=Hy-Hy_given_x
print(Ixy3)
Ixy4=Hxy-Hx_given_y-Hy_given_x
print(Ixy4)